/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Activities extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.activities</code>
     */
    public static final Activities ACTIVITIES = new Activities();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord.class;
    }

    /**
     * The column <code>drm.activities.activity_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.Integer> ACTIVITY_ID = createField(org.jooq.impl.DSL.name("activity_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('drm.seq_activities'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>drm.activities.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>drm.activities.external_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.String> EXTERNAL_ID = createField(org.jooq.impl.DSL.name("external_id"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>drm.activities.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>drm.activities.customer</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.Boolean> CUSTOMER = createField(org.jooq.impl.DSL.name("customer"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>drm.activities.timetable</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.Boolean> TIMETABLE = createField(org.jooq.impl.DSL.name("timetable"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>drm.activities.jobs</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.Boolean> JOBS = createField(org.jooq.impl.DSL.name("jobs"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>drm.activities.opportunities</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.Boolean> OPPORTUNITIES = createField(org.jooq.impl.DSL.name("opportunities"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>drm.activities.exportable</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord, java.lang.Boolean> EXPORTABLE = createField(org.jooq.impl.DSL.name("exportable"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("true", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    private Activities(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Activities(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.activities</code> table reference
     */
    public Activities(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), ACTIVITIES);
    }

    /**
     * Create an aliased <code>drm.activities</code> table reference
     */
    public Activities(org.jooq.Name alias) {
        this(alias, ACTIVITIES);
    }

    /**
     * Create a <code>drm.activities</code> table reference
     */
    public Activities() {
        this(org.jooq.impl.DSL.name("activities"), null);
    }

    public <O extends org.jooq.Record> Activities(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord> key) {
        super(child, key, ACTIVITIES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.ACTIVITIES_AK1, com.sonicle.webtop.drm.jooq.Indexes.ACTIVITIES_AK2);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.ACTIVITIES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ActivitiesRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.ACTIVITIES_PKEY);
    }

    @java.lang.Override
    public Activities as(java.lang.String alias) {
        return new Activities(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Activities as(org.jooq.Name alias) {
        return new Activities(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Activities rename(java.lang.String name) {
        return new Activities(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Activities rename(org.jooq.Name name) {
        return new Activities(name, null);
    }

    // -------------------------------------------------------------------------
    // Row9 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row9<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean> fieldsRow() {
        return (org.jooq.Row9) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuditLog extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.audit_log</code>
     */
    public static final AuditLog AUDIT_LOG = new AuditLog();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord.class;
    }

    /**
     * The column <code>core.audit_log.audit_log_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.Long> AUDIT_LOG_ID = createField(org.jooq.impl.DSL.name("audit_log_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('core.seq_audit_log'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>core.audit_log.timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, org.joda.time.DateTime> TIMESTAMP = createField(org.jooq.impl.DSL.name("timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.audit_log.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>core.audit_log.user_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.String> USER_ID = createField(org.jooq.impl.DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>core.audit_log.service_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.String> SERVICE_ID = createField(org.jooq.impl.DSL.name("service_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.audit_log.context</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.String> CONTEXT = createField(org.jooq.impl.DSL.name("context"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>core.audit_log.action</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.String> ACTION = createField(org.jooq.impl.DSL.name("action"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>core.audit_log.reference_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.String> REFERENCE_ID = createField(org.jooq.impl.DSL.name("reference_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.audit_log.session_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.String> SESSION_ID = createField(org.jooq.impl.DSL.name("session_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.audit_log.data</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord, java.lang.String> DATA = createField(org.jooq.impl.DSL.name("data"), org.jooq.impl.SQLDataType.CLOB, this, "");

    private AuditLog(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord> aliased) {
        this(alias, aliased, null);
    }

    private AuditLog(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.audit_log</code> table reference
     */
    public AuditLog(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), AUDIT_LOG);
    }

    /**
     * Create an aliased <code>core.audit_log</code> table reference
     */
    public AuditLog(org.jooq.Name alias) {
        this(alias, AUDIT_LOG);
    }

    /**
     * Create a <code>core.audit_log</code> table reference
     */
    public AuditLog() {
        this(org.jooq.impl.DSL.name("audit_log"), null);
    }

    public <O extends org.jooq.Record> AuditLog(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord> key) {
        super(child, key, AUDIT_LOG);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Core.CORE;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.AUDIT_LOG_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.AUDIT_LOG_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.AuditLogRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.AUDIT_LOG_PKEY);
    }

    @java.lang.Override
    public AuditLog as(java.lang.String alias) {
        return new AuditLog(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public AuditLog as(org.jooq.Name alias) {
        return new AuditLog(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public AuditLog rename(java.lang.String name) {
        return new AuditLog(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public AuditLog rename(org.jooq.Name name) {
        return new AuditLog(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row10<java.lang.Long, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row10) super.fieldsRow();
    }
}

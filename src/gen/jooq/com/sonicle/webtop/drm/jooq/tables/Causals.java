/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Causals extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.causals</code>
     */
    public static final Causals CAUSALS = new Causals();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord.class;
    }

    /**
     * The column <code>core.causals.causal_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord, java.lang.Integer> CAUSAL_ID = createField(org.jooq.impl.DSL.name("causal_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('core.seq_causals'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>core.causals.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>core.causals.user_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord, java.lang.String> USER_ID = createField(org.jooq.impl.DSL.name("user_id"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>core.causals.master_data_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord, java.lang.String> MASTER_DATA_ID = createField(org.jooq.impl.DSL.name("master_data_id"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>core.causals.revision_status</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord, java.lang.String> REVISION_STATUS = createField(org.jooq.impl.DSL.name("revision_status"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>core.causals.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.causals.read_only</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord, java.lang.Boolean> READ_ONLY = createField(org.jooq.impl.DSL.name("read_only"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>core.causals.external_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord, java.lang.String> EXTERNAL_ID = createField(org.jooq.impl.DSL.name("external_id"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    private Causals(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Causals(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.causals</code> table reference
     */
    public Causals(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), CAUSALS);
    }

    /**
     * Create an aliased <code>core.causals</code> table reference
     */
    public Causals(org.jooq.Name alias) {
        this(alias, CAUSALS);
    }

    /**
     * Create a <code>core.causals</code> table reference
     */
    public Causals() {
        this(org.jooq.impl.DSL.name("causals"), null);
    }

    public <O extends org.jooq.Record> Causals(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord> key) {
        super(child, key, CAUSALS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Core.CORE;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.CAUSALS_AK1, com.sonicle.webtop.drm.jooq.Indexes.CAUSALS_AK2);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.CAUSALS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CausalsRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.CAUSALS_PKEY);
    }

    @java.lang.Override
    public Causals as(java.lang.String alias) {
        return new Causals(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Causals as(org.jooq.Name alias) {
        return new Causals(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Causals rename(java.lang.String name) {
        return new Causals(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Causals rename(org.jooq.Name name) {
        return new Causals(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row8<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String> fieldsRow() {
        return (org.jooq.Row8) super.fieldsRow();
    }
}

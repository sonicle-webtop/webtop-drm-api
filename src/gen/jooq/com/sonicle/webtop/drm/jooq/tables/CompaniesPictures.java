/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CompaniesPictures extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.companies_pictures</code>
     */
    public static final CompaniesPictures COMPANIES_PICTURES = new CompaniesPictures();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord.class;
    }

    /**
     * The column <code>drm.companies_pictures.company_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord, java.lang.Integer> COMPANY_ID = createField(org.jooq.impl.DSL.name("company_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.companies_pictures.width</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord, java.lang.Integer> WIDTH = createField(org.jooq.impl.DSL.name("width"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>drm.companies_pictures.height</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord, java.lang.Integer> HEIGHT = createField(org.jooq.impl.DSL.name("height"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>drm.companies_pictures.media_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord, java.lang.String> MEDIA_TYPE = createField(org.jooq.impl.DSL.name("media_type"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>drm.companies_pictures.bytes</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord, byte[]> BYTES = createField(org.jooq.impl.DSL.name("bytes"), org.jooq.impl.SQLDataType.BLOB, this, "");

    private CompaniesPictures(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CompaniesPictures(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.companies_pictures</code> table reference
     */
    public CompaniesPictures(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), COMPANIES_PICTURES);
    }

    /**
     * Create an aliased <code>drm.companies_pictures</code> table reference
     */
    public CompaniesPictures(org.jooq.Name alias) {
        this(alias, COMPANIES_PICTURES);
    }

    /**
     * Create a <code>drm.companies_pictures</code> table reference
     */
    public CompaniesPictures() {
        this(org.jooq.impl.DSL.name("companies_pictures"), null);
    }

    public <O extends org.jooq.Record> CompaniesPictures(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord> key) {
        super(child, key, COMPANIES_PICTURES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.COMPANIES_PICTURES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CompaniesPicturesRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.COMPANIES_PICTURES_PKEY);
    }

    @java.lang.Override
    public CompaniesPictures as(java.lang.String alias) {
        return new CompaniesPictures(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public CompaniesPictures as(org.jooq.Name alias) {
        return new CompaniesPictures(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public CompaniesPictures rename(java.lang.String name) {
        return new CompaniesPictures(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public CompaniesPictures rename(org.jooq.Name name) {
        return new CompaniesPictures(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row5<java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.String, byte[]> fieldsRow() {
        return (org.jooq.Row5) super.fieldsRow();
    }
}

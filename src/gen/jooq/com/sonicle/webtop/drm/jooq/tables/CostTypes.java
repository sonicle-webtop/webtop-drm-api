/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CostTypes extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.cost_types</code>
     */
    public static final CostTypes COST_TYPES = new CostTypes();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord.class;
    }

    /**
     * The column <code>drm.cost_types.id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.Integer> ID = createField(org.jooq.impl.DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.cost_types.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>drm.cost_types.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>drm.cost_types.max_import</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.math.BigDecimal> MAX_IMPORT = createField(org.jooq.impl.DSL.name("max_import"), org.jooq.impl.SQLDataType.NUMERIC(15, 2), this, "");

    /**
     * The column <code>drm.cost_types.cost_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.String> COST_TYPE = createField(org.jooq.impl.DSL.name("cost_type"), org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>drm.cost_types.with_others</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.Boolean> WITH_OTHERS = createField(org.jooq.impl.DSL.name("with_others"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>drm.cost_types.per_person</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.Boolean> PER_PERSON = createField(org.jooq.impl.DSL.name("per_person"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>drm.cost_types.km</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.Boolean> KM = createField(org.jooq.impl.DSL.name("km"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>drm.cost_types.advance_payment</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.Boolean> ADVANCE_PAYMENT = createField(org.jooq.impl.DSL.name("advance_payment"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>drm.cost_types.exchange</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord, java.lang.Boolean> EXCHANGE = createField(org.jooq.impl.DSL.name("exchange"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    private CostTypes(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord> aliased) {
        this(alias, aliased, null);
    }

    private CostTypes(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.cost_types</code> table reference
     */
    public CostTypes(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), COST_TYPES);
    }

    /**
     * Create an aliased <code>drm.cost_types</code> table reference
     */
    public CostTypes(org.jooq.Name alias) {
        this(alias, COST_TYPES);
    }

    /**
     * Create a <code>drm.cost_types</code> table reference
     */
    public CostTypes() {
        this(org.jooq.impl.DSL.name("cost_types"), null);
    }

    public <O extends org.jooq.Record> CostTypes(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord> key) {
        super(child, key, COST_TYPES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.COST_TYPES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.CostTypesRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.COST_TYPES_PKEY);
    }

    @java.lang.Override
    public CostTypes as(java.lang.String alias) {
        return new CostTypes(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public CostTypes as(org.jooq.Name alias) {
        return new CostTypes(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public CostTypes rename(java.lang.String name) {
        return new CostTypes(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public CostTypes rename(org.jooq.Name name) {
        return new CostTypes(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row10<java.lang.Integer, java.lang.String, java.lang.String, java.math.BigDecimal, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean> fieldsRow() {
        return (org.jooq.Row10) super.fieldsRow();
    }
}

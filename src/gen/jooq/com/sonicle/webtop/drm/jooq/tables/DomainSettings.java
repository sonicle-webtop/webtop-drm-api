/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DomainSettings extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.domain_settings</code>
     */
    public static final DomainSettings DOMAIN_SETTINGS = new DomainSettings();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord.class;
    }

    /**
     * The column <code>core.domain_settings.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>core.domain_settings.service_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord, java.lang.String> SERVICE_ID = createField(org.jooq.impl.DSL.name("service_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.domain_settings.key</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord, java.lang.String> KEY = createField(org.jooq.impl.DSL.name("key"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.domain_settings.value</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord, java.lang.String> VALUE = createField(org.jooq.impl.DSL.name("value"), org.jooq.impl.SQLDataType.CLOB, this, "");

    private DomainSettings(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord> aliased) {
        this(alias, aliased, null);
    }

    private DomainSettings(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.domain_settings</code> table reference
     */
    public DomainSettings(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), DOMAIN_SETTINGS);
    }

    /**
     * Create an aliased <code>core.domain_settings</code> table reference
     */
    public DomainSettings(org.jooq.Name alias) {
        this(alias, DOMAIN_SETTINGS);
    }

    /**
     * Create a <code>core.domain_settings</code> table reference
     */
    public DomainSettings() {
        this(org.jooq.impl.DSL.name("domain_settings"), null);
    }

    public <O extends org.jooq.Record> DomainSettings(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord> key) {
        super(child, key, DOMAIN_SETTINGS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Core.CORE;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.DOMAIN_SETTINGS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainSettingsRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.DOMAIN_SETTINGS_PKEY);
    }

    @java.lang.Override
    public DomainSettings as(java.lang.String alias) {
        return new DomainSettings(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public DomainSettings as(org.jooq.Name alias) {
        return new DomainSettings(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public DomainSettings rename(java.lang.String name) {
        return new DomainSettings(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public DomainSettings rename(org.jooq.Name name) {
        return new DomainSettings(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row4<java.lang.String, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row4) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Domains extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.domains</code>
     */
    public static final Domains DOMAINS = new Domains();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord.class;
    }

    /**
     * The column <code>core.domains.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>core.domains.internet_name</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.String> INTERNET_NAME = createField(org.jooq.impl.DSL.name("internet_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.domains.enabled</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> ENABLED = createField(org.jooq.impl.DSL.name("enabled"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>core.domains.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>core.domains.user_auto_creation</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> USER_AUTO_CREATION = createField(org.jooq.impl.DSL.name("user_auto_creation"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>core.domains.dir_uri</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.String> DIR_URI = createField(org.jooq.impl.DSL.name("dir_uri"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.domains.dir_admin</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.String> DIR_ADMIN = createField(org.jooq.impl.DSL.name("dir_admin"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.domains.dir_password</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.String> DIR_PASSWORD = createField(org.jooq.impl.DSL.name("dir_password"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.domains.dir_connection_security</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.String> DIR_CONNECTION_SECURITY = createField(org.jooq.impl.DSL.name("dir_connection_security"), org.jooq.impl.SQLDataType.VARCHAR(10), this, "");

    /**
     * The column <code>core.domains.dir_case_sensitive</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> DIR_CASE_SENSITIVE = createField(org.jooq.impl.DSL.name("dir_case_sensitive"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>core.domains.dir_password_policy</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> DIR_PASSWORD_POLICY = createField(org.jooq.impl.DSL.name("dir_password_policy"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>core.domains.dir_parameters</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.String> DIR_PARAMETERS = createField(org.jooq.impl.DSL.name("dir_parameters"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>core.domains.dir_pwd_policy_complexity</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> DIR_PWD_POLICY_COMPLEXITY = createField(org.jooq.impl.DSL.name("dir_pwd_policy_complexity"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>core.domains.dir_pwd_policy_min_length</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Short> DIR_PWD_POLICY_MIN_LENGTH = createField(org.jooq.impl.DSL.name("dir_pwd_policy_min_length"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>core.domains.dir_pwd_policy_avoid_consecutive_chars</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> DIR_PWD_POLICY_AVOID_CONSECUTIVE_CHARS = createField(org.jooq.impl.DSL.name("dir_pwd_policy_avoid_consecutive_chars"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>core.domains.dir_pwd_policy_avoid_old_similarity</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> DIR_PWD_POLICY_AVOID_OLD_SIMILARITY = createField(org.jooq.impl.DSL.name("dir_pwd_policy_avoid_old_similarity"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>core.domains.dir_pwd_policy_avoid_username_similarity</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> DIR_PWD_POLICY_AVOID_USERNAME_SIMILARITY = createField(org.jooq.impl.DSL.name("dir_pwd_policy_avoid_username_similarity"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    /**
     * The column <code>core.domains.dir_pwd_policy_expiration</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Short> DIR_PWD_POLICY_EXPIRATION = createField(org.jooq.impl.DSL.name("dir_pwd_policy_expiration"), org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>core.domains.dir_pwd_policy_verify_at_login</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord, java.lang.Boolean> DIR_PWD_POLICY_VERIFY_AT_LOGIN = createField(org.jooq.impl.DSL.name("dir_pwd_policy_verify_at_login"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    private Domains(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Domains(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.domains</code> table reference
     */
    public Domains(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), DOMAINS);
    }

    /**
     * Create an aliased <code>core.domains</code> table reference
     */
    public Domains(org.jooq.Name alias) {
        this(alias, DOMAINS);
    }

    /**
     * Create a <code>core.domains</code> table reference
     */
    public Domains() {
        this(org.jooq.impl.DSL.name("domains"), null);
    }

    public <O extends org.jooq.Record> Domains(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord> key) {
        super(child, key, DOMAINS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Core.CORE;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.DOMAINS_AK1, com.sonicle.webtop.drm.jooq.Indexes.DOMAINS_AK2);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.DOMAINS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainsRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.DOMAINS_PKEY);
    }

    @java.lang.Override
    public Domains as(java.lang.String alias) {
        return new Domains(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Domains as(org.jooq.Name alias) {
        return new Domains(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Domains rename(java.lang.String name) {
        return new Domains(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Domains rename(org.jooq.Name name) {
        return new Domains(name, null);
    }

    // -------------------------------------------------------------------------
    // Row19 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row19<java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.Boolean, java.lang.Short, java.lang.Boolean, java.lang.Boolean, java.lang.Boolean, java.lang.Short, java.lang.Boolean> fieldsRow() {
        return (org.jooq.Row19) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DomainsAliases extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.domains_aliases</code>
     */
    public static final DomainsAliases DOMAINS_ALIASES = new DomainsAliases();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord.class;
    }

    /**
     * The column <code>core.domains_aliases.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>core.domains_aliases.internet_name</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord, java.lang.String> INTERNET_NAME = createField(org.jooq.impl.DSL.name("internet_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    private DomainsAliases(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord> aliased) {
        this(alias, aliased, null);
    }

    private DomainsAliases(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.domains_aliases</code> table reference
     */
    public DomainsAliases(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), DOMAINS_ALIASES);
    }

    /**
     * Create an aliased <code>core.domains_aliases</code> table reference
     */
    public DomainsAliases(org.jooq.Name alias) {
        this(alias, DOMAINS_ALIASES);
    }

    /**
     * Create a <code>core.domains_aliases</code> table reference
     */
    public DomainsAliases() {
        this(org.jooq.impl.DSL.name("domains_aliases"), null);
    }

    public <O extends org.jooq.Record> DomainsAliases(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord> key) {
        super(child, key, DOMAINS_ALIASES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Core.CORE;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.DOMAINS_ALIASES_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.DOMAINS_ALIASES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.DOMAINS_ALIASES_PKEY);
    }

    @java.lang.Override
    public java.util.List<org.jooq.ForeignKey<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord, ?>> getReferences() {
        return java.util.Arrays.<org.jooq.ForeignKey<com.sonicle.webtop.drm.jooq.tables.records.DomainsAliasesRecord, ?>>asList(com.sonicle.webtop.drm.jooq.Keys.DOMAINS_ALIASES__DOMAINS_ALIASES_DOMAIN_ID_FKEY);
    }

    private transient com.sonicle.webtop.drm.jooq.tables.Domains _domains;

    public com.sonicle.webtop.drm.jooq.tables.Domains domains() {
        if (_domains == null)
            _domains = new com.sonicle.webtop.drm.jooq.tables.Domains(this, com.sonicle.webtop.drm.jooq.Keys.DOMAINS_ALIASES__DOMAINS_ALIASES_DOMAIN_ID_FKEY);

        return _domains;
    }

    @java.lang.Override
    public DomainsAliases as(java.lang.String alias) {
        return new DomainsAliases(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public DomainsAliases as(org.jooq.Name alias) {
        return new DomainsAliases(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public DomainsAliases rename(java.lang.String name) {
        return new DomainsAliases(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public DomainsAliases rename(org.jooq.Name name) {
        return new DomainsAliases(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row2<java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row2) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpenseNote extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.expense_note</code>
     */
    public static final ExpenseNote EXPENSE_NOTE = new ExpenseNote();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord.class;
    }

    /**
     * The column <code>drm.expense_note.id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, java.lang.Integer> ID = createField(org.jooq.impl.DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.expense_note.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>drm.expense_note.operator_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, java.lang.String> OPERATOR_ID = createField(org.jooq.impl.DSL.name("operator_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.expense_note.company_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, java.lang.Integer> COMPANY_ID = createField(org.jooq.impl.DSL.name("company_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.expense_note.from_date</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, org.joda.time.LocalDate> FROM_DATE = createField(org.jooq.impl.DSL.name("from_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "", new com.sonicle.jooq.jsr310.LocalDateJodaConverter());

    /**
     * The column <code>drm.expense_note.to_date</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, org.joda.time.LocalDate> TO_DATE = createField(org.jooq.impl.DSL.name("to_date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "", new com.sonicle.jooq.jsr310.LocalDateJodaConverter());

    /**
     * The column <code>drm.expense_note.tot_currency</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, java.math.BigDecimal> TOT_CURRENCY = createField(org.jooq.impl.DSL.name("tot_currency"), org.jooq.impl.SQLDataType.NUMERIC(15, 2), this, "");

    /**
     * The column <code>drm.expense_note.currency</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, java.lang.String> CURRENCY = createField(org.jooq.impl.DSL.name("currency"), org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>drm.expense_note.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>drm.expense_note.status</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord, java.lang.String> STATUS = createField(org.jooq.impl.DSL.name("status"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    private ExpenseNote(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExpenseNote(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.expense_note</code> table reference
     */
    public ExpenseNote(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), EXPENSE_NOTE);
    }

    /**
     * Create an aliased <code>drm.expense_note</code> table reference
     */
    public ExpenseNote(org.jooq.Name alias) {
        this(alias, EXPENSE_NOTE);
    }

    /**
     * Create a <code>drm.expense_note</code> table reference
     */
    public ExpenseNote() {
        this(org.jooq.impl.DSL.name("expense_note"), null);
    }

    public <O extends org.jooq.Record> ExpenseNote(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord> key) {
        super(child, key, EXPENSE_NOTE);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.EXPENSE_NOTE_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.EXPENSE_NOTE_PKEY);
    }

    @java.lang.Override
    public ExpenseNote as(java.lang.String alias) {
        return new ExpenseNote(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public ExpenseNote as(org.jooq.Name alias) {
        return new ExpenseNote(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ExpenseNote rename(java.lang.String name) {
        return new ExpenseNote(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ExpenseNote rename(org.jooq.Name name) {
        return new ExpenseNote(name, null);
    }

    // -------------------------------------------------------------------------
    // Row10 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row10<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Integer, org.joda.time.LocalDate, org.joda.time.LocalDate, java.math.BigDecimal, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row10) super.fieldsRow();
    }
}

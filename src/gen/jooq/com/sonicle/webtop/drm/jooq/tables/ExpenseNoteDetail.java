/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExpenseNoteDetail extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.expense_note_detail</code>
     */
    public static final ExpenseNoteDetail EXPENSE_NOTE_DETAIL = new ExpenseNoteDetail();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord.class;
    }

    /**
     * The column <code>drm.expense_note_detail.id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.Integer> ID = createField(org.jooq.impl.DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.expense_note_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.Integer> EXPENSE_NOTE_ID = createField(org.jooq.impl.DSL.name("expense_note_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.operator_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.String> OPERATOR_ID = createField(org.jooq.impl.DSL.name("operator_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.company_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.Integer> COMPANY_ID = createField(org.jooq.impl.DSL.name("company_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.type_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.Integer> TYPE_ID = createField(org.jooq.impl.DSL.name("type_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.total</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.math.BigDecimal> TOTAL = createField(org.jooq.impl.DSL.name("total"), org.jooq.impl.SQLDataType.NUMERIC(15, 2).nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.date</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, org.joda.time.LocalDate> DATE = createField(org.jooq.impl.DSL.name("date"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "", new com.sonicle.jooq.jsr310.LocalDateJodaConverter());

    /**
     * The column <code>drm.expense_note_detail.payment_company</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.Boolean> PAYMENT_COMPANY = createField(org.jooq.impl.DSL.name("payment_company"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>drm.expense_note_detail.invoice</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.Boolean> INVOICE = createField(org.jooq.impl.DSL.name("invoice"), org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * The column <code>drm.expense_note_detail.invoice_number</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.String> INVOICE_NUMBER = createField(org.jooq.impl.DSL.name("invoice_number"), org.jooq.impl.SQLDataType.VARCHAR(20), this, "");

    /**
     * The column <code>drm.expense_note_detail.with_others</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.String> WITH_OTHERS = createField(org.jooq.impl.DSL.name("with_others"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>drm.expense_note_detail.customer_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.String> CUSTOMER_ID = createField(org.jooq.impl.DSL.name("customer_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.km</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.math.BigDecimal> KM = createField(org.jooq.impl.DSL.name("km"), org.jooq.impl.SQLDataType.NUMERIC(15, 2), this, "");

    /**
     * The column <code>drm.expense_note_detail.currency</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.String> CURRENCY = createField(org.jooq.impl.DSL.name("currency"), org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.change</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.math.BigDecimal> CHANGE = createField(org.jooq.impl.DSL.name("change"), org.jooq.impl.SQLDataType.NUMERIC(15, 2).nullable(false), this, "");

    /**
     * The column <code>drm.expense_note_detail.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>drm.expense_note_detail.total_doc</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.math.BigDecimal> TOTAL_DOC = createField(org.jooq.impl.DSL.name("total_doc"), org.jooq.impl.SQLDataType.NUMERIC(15, 2), this, "");

    /**
     * The column <code>drm.expense_note_detail.currency_doc</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord, java.lang.String> CURRENCY_DOC = createField(org.jooq.impl.DSL.name("currency_doc"), org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    private ExpenseNoteDetail(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord> aliased) {
        this(alias, aliased, null);
    }

    private ExpenseNoteDetail(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.expense_note_detail</code> table reference
     */
    public ExpenseNoteDetail(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), EXPENSE_NOTE_DETAIL);
    }

    /**
     * Create an aliased <code>drm.expense_note_detail</code> table reference
     */
    public ExpenseNoteDetail(org.jooq.Name alias) {
        this(alias, EXPENSE_NOTE_DETAIL);
    }

    /**
     * Create a <code>drm.expense_note_detail</code> table reference
     */
    public ExpenseNoteDetail() {
        this(org.jooq.impl.DSL.name("expense_note_detail"), null);
    }

    public <O extends org.jooq.Record> ExpenseNoteDetail(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord> key) {
        super(child, key, EXPENSE_NOTE_DETAIL);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.EXPENSE_NOTE_DETAIL_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.ExpenseNoteDetailRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.EXPENSE_NOTE_DETAIL_PKEY);
    }

    @java.lang.Override
    public ExpenseNoteDetail as(java.lang.String alias) {
        return new ExpenseNoteDetail(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public ExpenseNoteDetail as(org.jooq.Name alias) {
        return new ExpenseNoteDetail(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ExpenseNoteDetail rename(java.lang.String name) {
        return new ExpenseNoteDetail(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public ExpenseNoteDetail rename(org.jooq.Name name) {
        return new ExpenseNoteDetail(name, null);
    }

    // -------------------------------------------------------------------------
    // Row18 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row18<java.lang.Integer, java.lang.Integer, java.lang.String, java.lang.Integer, java.lang.Integer, java.math.BigDecimal, org.joda.time.LocalDate, java.lang.Boolean, java.lang.Boolean, java.lang.String, java.lang.String, java.lang.String, java.math.BigDecimal, java.lang.String, java.math.BigDecimal, java.lang.String, java.math.BigDecimal, java.lang.String> fieldsRow() {
        return (org.jooq.Row18) super.fieldsRow();
    }
}

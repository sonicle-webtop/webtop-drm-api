/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Folders extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.folders</code>
     */
    public static final Folders FOLDERS = new Folders();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord.class;
    }

    /**
     * The column <code>drm.folders.folder_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord, java.lang.String> FOLDER_ID = createField(org.jooq.impl.DSL.name("folder_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.folders.name</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord, java.lang.String> NAME = createField(org.jooq.impl.DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>drm.folders.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>drm.folders.expired</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord, java.lang.Boolean> EXPIRED = createField(org.jooq.impl.DSL.name("expired"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false).defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    private Folders(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Folders(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.folders</code> table reference
     */
    public Folders(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), FOLDERS);
    }

    /**
     * Create an aliased <code>drm.folders</code> table reference
     */
    public Folders(org.jooq.Name alias) {
        this(alias, FOLDERS);
    }

    /**
     * Create a <code>drm.folders</code> table reference
     */
    public Folders() {
        this(org.jooq.impl.DSL.name("folders"), null);
    }

    public <O extends org.jooq.Record> Folders(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord> key) {
        super(child, key, FOLDERS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.FOLDERS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.FoldersRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.FOLDERS_PKEY);
    }

    @java.lang.Override
    public Folders as(java.lang.String alias) {
        return new Folders(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Folders as(org.jooq.Name alias) {
        return new Folders(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Folders rename(java.lang.String name) {
        return new Folders(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Folders rename(org.jooq.Name name) {
        return new Folders(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row4<java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean> fieldsRow() {
        return (org.jooq.Row4) super.fieldsRow();
    }
}

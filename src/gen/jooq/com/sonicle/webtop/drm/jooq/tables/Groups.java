/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Groups extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.groups</code>
     */
    public static final Groups GROUPS = new Groups();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord.class;
    }

    /**
     * The column <code>drm.groups.group_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord, java.lang.String> GROUP_ID = createField(org.jooq.impl.DSL.name("group_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.groups.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>drm.groups.group_category</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord, java.lang.String> GROUP_CATEGORY = createField(org.jooq.impl.DSL.name("group_category"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>drm.groups.name</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord, java.lang.String> NAME = createField(org.jooq.impl.DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>drm.groups.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>drm.groups.group_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord, java.lang.String> GROUP_TYPE = createField(org.jooq.impl.DSL.name("group_type"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>drm.groups.customer_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord, java.lang.String> CUSTOMER_ID = createField(org.jooq.impl.DSL.name("customer_id"), org.jooq.impl.SQLDataType.VARCHAR(36), this, "");

    /**
     * The column <code>drm.groups.supervisior_user_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord, java.lang.String> SUPERVISIOR_USER_ID = createField(org.jooq.impl.DSL.name("supervisior_user_id"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    private Groups(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Groups(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.groups</code> table reference
     */
    public Groups(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), GROUPS);
    }

    /**
     * Create an aliased <code>drm.groups</code> table reference
     */
    public Groups(org.jooq.Name alias) {
        this(alias, GROUPS);
    }

    /**
     * Create a <code>drm.groups</code> table reference
     */
    public Groups() {
        this(org.jooq.impl.DSL.name("groups"), null);
    }

    public <O extends org.jooq.Record> Groups(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord> key) {
        super(child, key, GROUPS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.GROUPS_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.GROUPS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.GroupsRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.GROUPS_PKEY);
    }

    @java.lang.Override
    public Groups as(java.lang.String alias) {
        return new Groups(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Groups as(org.jooq.Name alias) {
        return new Groups(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Groups rename(java.lang.String name) {
        return new Groups(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Groups rename(org.jooq.Name name) {
        return new Groups(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row8<java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row8) super.fieldsRow();
    }
}

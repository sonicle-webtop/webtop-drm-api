/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IpGeoCache extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.ip_geo_cache</code>
     */
    public static final IpGeoCache IP_GEO_CACHE = new IpGeoCache();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord.class;
    }

    /**
     * The column <code>core.ip_geo_cache.ip_address</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord, java.lang.String> IP_ADDRESS = createField(org.jooq.impl.DSL.name("ip_address"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>core.ip_geo_cache.timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord, org.joda.time.DateTime> TIMESTAMP = createField(org.jooq.impl.DSL.name("timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.ip_geo_cache.provider</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord, java.lang.String> PROVIDER = createField(org.jooq.impl.DSL.name("provider"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.ip_geo_cache.data</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord, java.lang.String> DATA = createField(org.jooq.impl.DSL.name("data"), org.jooq.impl.SQLDataType.CLOB, this, "");

    private IpGeoCache(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord> aliased) {
        this(alias, aliased, null);
    }

    private IpGeoCache(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.ip_geo_cache</code> table reference
     */
    public IpGeoCache(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), IP_GEO_CACHE);
    }

    /**
     * Create an aliased <code>core.ip_geo_cache</code> table reference
     */
    public IpGeoCache(org.jooq.Name alias) {
        this(alias, IP_GEO_CACHE);
    }

    /**
     * Create a <code>core.ip_geo_cache</code> table reference
     */
    public IpGeoCache() {
        this(org.jooq.impl.DSL.name("ip_geo_cache"), null);
    }

    public <O extends org.jooq.Record> IpGeoCache(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord> key) {
        super(child, key, IP_GEO_CACHE);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Core.CORE;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.IP_GEO_CACHE_AK1);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.IP_GEO_CACHE_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.IpGeoCacheRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.IP_GEO_CACHE_PKEY);
    }

    @java.lang.Override
    public IpGeoCache as(java.lang.String alias) {
        return new IpGeoCache(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public IpGeoCache as(org.jooq.Name alias) {
        return new IpGeoCache(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public IpGeoCache rename(java.lang.String name) {
        return new IpGeoCache(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public IpGeoCache rename(org.jooq.Name name) {
        return new IpGeoCache(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row4<java.lang.String, org.joda.time.DateTime, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row4) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Licenses extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.licenses</code>
     */
    public static final Licenses LICENSES = new Licenses();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord.class;
    }

    /**
     * The column <code>core.licenses.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>core.licenses.service_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, java.lang.String> SERVICE_ID = createField(org.jooq.impl.DSL.name("service_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.licenses.product_code</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, java.lang.String> PRODUCT_CODE = createField(org.jooq.impl.DSL.name("product_code"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.licenses.string</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, java.lang.String> STRING = createField(org.jooq.impl.DSL.name("string"), org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>core.licenses.revision_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, org.joda.time.DateTime> REVISION_TIMESTAMP = createField(org.jooq.impl.DSL.name("revision_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.licenses.activated_string</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, java.lang.String> ACTIVATED_STRING = createField(org.jooq.impl.DSL.name("activated_string"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>core.licenses.activation_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, org.joda.time.DateTime> ACTIVATION_TIMESTAMP = createField(org.jooq.impl.DSL.name("activation_timestamp"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>core.licenses.activation_hw_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, java.lang.String> ACTIVATION_HW_ID = createField(org.jooq.impl.DSL.name("activation_hw_id"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.licenses.expiration_date</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, org.joda.time.LocalDate> EXPIRATION_DATE = createField(org.jooq.impl.DSL.name("expiration_date"), org.jooq.impl.SQLDataType.LOCALDATE, this, "", new com.sonicle.jooq.jsr310.LocalDateJodaConverter());

    /**
     * The column <code>core.licenses.quantity</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, java.lang.Integer> QUANTITY = createField(org.jooq.impl.DSL.name("quantity"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>core.licenses.auto_lease</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord, java.lang.Boolean> AUTO_LEASE = createField(org.jooq.impl.DSL.name("auto_lease"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    private Licenses(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Licenses(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.licenses</code> table reference
     */
    public Licenses(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), LICENSES);
    }

    /**
     * Create an aliased <code>core.licenses</code> table reference
     */
    public Licenses(org.jooq.Name alias) {
        this(alias, LICENSES);
    }

    /**
     * Create a <code>core.licenses</code> table reference
     */
    public Licenses() {
        this(org.jooq.impl.DSL.name("licenses"), null);
    }

    public <O extends org.jooq.Record> Licenses(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord> key) {
        super(child, key, LICENSES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Core.CORE;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.LICENSES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.LicensesRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.LICENSES_PKEY);
    }

    @java.lang.Override
    public Licenses as(java.lang.String alias) {
        return new Licenses(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Licenses as(org.jooq.Name alias) {
        return new Licenses(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Licenses rename(java.lang.String name) {
        return new Licenses(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Licenses rename(org.jooq.Name name) {
        return new Licenses(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row11<java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.joda.time.DateTime, java.lang.String, org.joda.time.DateTime, java.lang.String, org.joda.time.LocalDate, java.lang.Integer, java.lang.Boolean> fieldsRow() {
        return (org.jooq.Row11) super.fieldsRow();
    }
}

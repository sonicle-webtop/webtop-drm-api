/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OpportunityFields extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.opportunity_fields</code>
     */
    public static final OpportunityFields OPPORTUNITY_FIELDS = new OpportunityFields();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord.class;
    }

    /**
     * The column <code>drm.opportunity_fields.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>drm.opportunity_fields.tab_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord, java.lang.String> TAB_ID = createField(org.jooq.impl.DSL.name("tab_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>drm.opportunity_fields.field_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord, java.lang.String> FIELD_ID = createField(org.jooq.impl.DSL.name("field_id"), org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "");

    /**
     * The column <code>drm.opportunity_fields.visible</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord, java.lang.Boolean> VISIBLE = createField(org.jooq.impl.DSL.name("visible"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>drm.opportunity_fields.required</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord, java.lang.Boolean> REQUIRED = createField(org.jooq.impl.DSL.name("required"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>drm.opportunity_fields.order</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord, java.lang.Integer> ORDER = createField(org.jooq.impl.DSL.name("order"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.opportunity_fields.label</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord, java.lang.String> LABEL = createField(org.jooq.impl.DSL.name("label"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>drm.opportunity_fields.show_on_grid</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord, java.lang.Boolean> SHOW_ON_GRID = createField(org.jooq.impl.DSL.name("show_on_grid"), org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.field("false", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    private OpportunityFields(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord> aliased) {
        this(alias, aliased, null);
    }

    private OpportunityFields(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.opportunity_fields</code> table reference
     */
    public OpportunityFields(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), OPPORTUNITY_FIELDS);
    }

    /**
     * Create an aliased <code>drm.opportunity_fields</code> table reference
     */
    public OpportunityFields(org.jooq.Name alias) {
        this(alias, OPPORTUNITY_FIELDS);
    }

    /**
     * Create a <code>drm.opportunity_fields</code> table reference
     */
    public OpportunityFields() {
        this(org.jooq.impl.DSL.name("opportunity_fields"), null);
    }

    public <O extends org.jooq.Record> OpportunityFields(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord> key) {
        super(child, key, OPPORTUNITY_FIELDS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.OPPORTUNITY_FIELDS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.OpportunityFieldsRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.OPPORTUNITY_FIELDS_PKEY);
    }

    @java.lang.Override
    public OpportunityFields as(java.lang.String alias) {
        return new OpportunityFields(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public OpportunityFields as(org.jooq.Name alias) {
        return new OpportunityFields(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public OpportunityFields rename(java.lang.String name) {
        return new OpportunityFields(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public OpportunityFields rename(org.jooq.Name name) {
        return new OpportunityFields(name, null);
    }

    // -------------------------------------------------------------------------
    // Row8 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row8<java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.Boolean, java.lang.Integer, java.lang.String, java.lang.Boolean> fieldsRow() {
        return (org.jooq.Row8) super.fieldsRow();
    }
}

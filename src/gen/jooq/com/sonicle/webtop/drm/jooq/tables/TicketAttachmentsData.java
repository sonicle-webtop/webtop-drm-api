/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketAttachmentsData extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.ticket_attachments_data</code>
     */
    public static final TicketAttachmentsData TICKET_ATTACHMENTS_DATA = new TicketAttachmentsData();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord.class;
    }

    /**
     * The column <code>drm.ticket_attachments_data.ticket_attachment_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord, java.lang.String> TICKET_ATTACHMENT_ID = createField(org.jooq.impl.DSL.name("ticket_attachment_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.ticket_attachments_data.bytes</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord, byte[]> BYTES = createField(org.jooq.impl.DSL.name("bytes"), org.jooq.impl.SQLDataType.BLOB.nullable(false), this, "");

    private TicketAttachmentsData(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord> aliased) {
        this(alias, aliased, null);
    }

    private TicketAttachmentsData(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.ticket_attachments_data</code> table reference
     */
    public TicketAttachmentsData(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), TICKET_ATTACHMENTS_DATA);
    }

    /**
     * Create an aliased <code>drm.ticket_attachments_data</code> table reference
     */
    public TicketAttachmentsData(org.jooq.Name alias) {
        this(alias, TICKET_ATTACHMENTS_DATA);
    }

    /**
     * Create a <code>drm.ticket_attachments_data</code> table reference
     */
    public TicketAttachmentsData() {
        this(org.jooq.impl.DSL.name("ticket_attachments_data"), null);
    }

    public <O extends org.jooq.Record> TicketAttachmentsData(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord> key) {
        super(child, key, TICKET_ATTACHMENTS_DATA);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.TICKET_ATTACHMENTS_DATA_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.TICKET_ATTACHMENTS_DATA_PKEY);
    }

    @java.lang.Override
    public java.util.List<org.jooq.ForeignKey<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord, ?>> getReferences() {
        return java.util.Arrays.<org.jooq.ForeignKey<com.sonicle.webtop.drm.jooq.tables.records.TicketAttachmentsDataRecord, ?>>asList(com.sonicle.webtop.drm.jooq.Keys.TICKET_ATTACHMENTS_DATA__TICKET_ATTACHMENTS_DATA_TICKET_ATTACHMENT_ID_FKEY);
    }

    private transient com.sonicle.webtop.drm.jooq.tables.TicketAttachments _ticketAttachments;

    public com.sonicle.webtop.drm.jooq.tables.TicketAttachments ticketAttachments() {
        if (_ticketAttachments == null)
            _ticketAttachments = new com.sonicle.webtop.drm.jooq.tables.TicketAttachments(this, com.sonicle.webtop.drm.jooq.Keys.TICKET_ATTACHMENTS_DATA__TICKET_ATTACHMENTS_DATA_TICKET_ATTACHMENT_ID_FKEY);

        return _ticketAttachments;
    }

    @java.lang.Override
    public TicketAttachmentsData as(java.lang.String alias) {
        return new TicketAttachmentsData(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public TicketAttachmentsData as(org.jooq.Name alias) {
        return new TicketAttachmentsData(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public TicketAttachmentsData rename(java.lang.String name) {
        return new TicketAttachmentsData(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public TicketAttachmentsData rename(org.jooq.Name name) {
        return new TicketAttachmentsData(name, null);
    }

    // -------------------------------------------------------------------------
    // Row2 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row2<java.lang.String, byte[]> fieldsRow() {
        return (org.jooq.Row2) super.fieldsRow();
    }
}

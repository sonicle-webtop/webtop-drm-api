/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TicketCategories extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.ticket_categories</code>
     */
    public static final TicketCategories TICKET_CATEGORIES = new TicketCategories();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord.class;
    }

    /**
     * The column <code>drm.ticket_categories.ticket_category_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord, java.lang.Integer> TICKET_CATEGORY_ID = createField(org.jooq.impl.DSL.name("ticket_category_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('drm.seq_ticket_categories'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>drm.ticket_categories.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>drm.ticket_categories.revision_status</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord, java.lang.String> REVISION_STATUS = createField(org.jooq.impl.DSL.name("revision_status"), org.jooq.impl.SQLDataType.VARCHAR(1).nullable(false), this, "");

    /**
     * The column <code>drm.ticket_categories.external_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord, java.lang.String> EXTERNAL_ID = createField(org.jooq.impl.DSL.name("external_id"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>drm.ticket_categories.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    private TicketCategories(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TicketCategories(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.ticket_categories</code> table reference
     */
    public TicketCategories(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), TICKET_CATEGORIES);
    }

    /**
     * Create an aliased <code>drm.ticket_categories</code> table reference
     */
    public TicketCategories(org.jooq.Name alias) {
        this(alias, TICKET_CATEGORIES);
    }

    /**
     * Create a <code>drm.ticket_categories</code> table reference
     */
    public TicketCategories() {
        this(org.jooq.impl.DSL.name("ticket_categories"), null);
    }

    public <O extends org.jooq.Record> TicketCategories(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord> key) {
        super(child, key, TICKET_CATEGORIES);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.TICKET_CATEGORIES_AK1, com.sonicle.webtop.drm.jooq.Indexes.TICKET_CATEGORIES_AK2);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.TICKET_CATEGORIES_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketCategoriesRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.TICKET_CATEGORIES_PKEY);
    }

    @java.lang.Override
    public TicketCategories as(java.lang.String alias) {
        return new TicketCategories(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public TicketCategories as(org.jooq.Name alias) {
        return new TicketCategories(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public TicketCategories rename(java.lang.String name) {
        return new TicketCategories(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public TicketCategories rename(org.jooq.Name name) {
        return new TicketCategories(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row5<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row5) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tickets extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>drm.tickets</code>
     */
    public static final Tickets TICKETS = new Tickets();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord.class;
    }

    /**
     * The column <code>drm.tickets.ticket_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> TICKET_ID = createField(org.jooq.impl.DSL.name("ticket_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.tickets.domain_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> DOMAIN_ID = createField(org.jooq.impl.DSL.name("domain_id"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>drm.tickets.company_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.Integer> COMPANY_ID = createField(org.jooq.impl.DSL.name("company_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>drm.tickets.from_operator_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> FROM_OPERATOR_ID = createField(org.jooq.impl.DSL.name("from_operator_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.tickets.to_operator_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> TO_OPERATOR_ID = createField(org.jooq.impl.DSL.name("to_operator_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.tickets.customer_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> CUSTOMER_ID = createField(org.jooq.impl.DSL.name("customer_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.tickets.customer_stat_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> CUSTOMER_STAT_ID = createField(org.jooq.impl.DSL.name("customer_stat_id"), org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>drm.tickets.title</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> TITLE = createField(org.jooq.impl.DSL.name("title"), org.jooq.impl.SQLDataType.VARCHAR(100), this, "");

    /**
     * The column <code>drm.tickets.description</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> DESCRIPTION = createField(org.jooq.impl.DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>drm.tickets.ticket_category_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.Integer> TICKET_CATEGORY_ID = createField(org.jooq.impl.DSL.name("ticket_category_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>drm.tickets.event_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> EVENT_ID = createField(org.jooq.impl.DSL.name("event_id"), org.jooq.impl.SQLDataType.VARCHAR(32), this, "");

    /**
     * The column <code>drm.tickets.date</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, org.joda.time.DateTime> DATE = createField(org.jooq.impl.DSL.name("date"), org.jooq.impl.SQLDataType.TIMESTAMPWITHTIMEZONE(6).nullable(false), this, "", new com.sonicle.jooq.jsr310.OffsetDateTimeJodaConverter());

    /**
     * The column <code>drm.tickets.timezone</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> TIMEZONE = createField(org.jooq.impl.DSL.name("timezone"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>drm.tickets.priority_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> PRIORITY_ID = createField(org.jooq.impl.DSL.name("priority_id"), org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>drm.tickets.status_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.Integer> STATUS_ID = createField(org.jooq.impl.DSL.name("status_id"), org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>drm.tickets.release</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> RELEASE = createField(org.jooq.impl.DSL.name("release"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>drm.tickets.environment</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> ENVIRONMENT = createField(org.jooq.impl.DSL.name("environment"), org.jooq.impl.SQLDataType.VARCHAR(200), this, "");

    /**
     * The column <code>drm.tickets.suggestion</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> SUGGESTION = createField(org.jooq.impl.DSL.name("suggestion"), org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>drm.tickets.simulation</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> SIMULATION = createField(org.jooq.impl.DSL.name("simulation"), org.jooq.impl.SQLDataType.VARCHAR(2048), this, "");

    /**
     * The column <code>drm.tickets.number</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord, java.lang.String> NUMBER = createField(org.jooq.impl.DSL.name("number"), org.jooq.impl.SQLDataType.VARCHAR(12), this, "");

    private Tickets(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tickets(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>drm.tickets</code> table reference
     */
    public Tickets(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), TICKETS);
    }

    /**
     * Create an aliased <code>drm.tickets</code> table reference
     */
    public Tickets(org.jooq.Name alias) {
        this(alias, TICKETS);
    }

    /**
     * Create a <code>drm.tickets</code> table reference
     */
    public Tickets() {
        this(org.jooq.impl.DSL.name("tickets"), null);
    }

    public <O extends org.jooq.Record> Tickets(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord> key) {
        super(child, key, TICKETS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Drm.DRM;
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.TICKETS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.TicketsRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.TICKETS_PKEY);
    }

    @java.lang.Override
    public Tickets as(java.lang.String alias) {
        return new Tickets(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public Tickets as(org.jooq.Name alias) {
        return new Tickets(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Tickets rename(java.lang.String name) {
        return new Tickets(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public Tickets rename(org.jooq.Name name) {
        return new Tickets(name, null);
    }

    // -------------------------------------------------------------------------
    // Row20 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row20<java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row20) super.fieldsRow();
    }
}

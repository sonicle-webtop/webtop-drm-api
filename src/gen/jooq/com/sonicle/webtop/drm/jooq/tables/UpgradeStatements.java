/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UpgradeStatements extends org.jooq.impl.TableImpl<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>core.upgrade_statements</code>
     */
    public static final UpgradeStatements UPGRADE_STATEMENTS = new UpgradeStatements();

    /**
     * The class holding records for this type
     */
    @java.lang.Override
    public java.lang.Class<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord> getRecordType() {
        return com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord.class;
    }

    /**
     * The column <code>core.upgrade_statements.upgrade_statement_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.Integer> UPGRADE_STATEMENT_ID = createField(org.jooq.impl.DSL.name("upgrade_statement_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('core.seq_upgrade_statements'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>core.upgrade_statements.tag</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.String> TAG = createField(org.jooq.impl.DSL.name("tag"), org.jooq.impl.SQLDataType.VARCHAR(20).nullable(false), this, "");

    /**
     * The column <code>core.upgrade_statements.service_id</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.String> SERVICE_ID = createField(org.jooq.impl.DSL.name("service_id"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.upgrade_statements.sequence_no</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.Short> SEQUENCE_NO = createField(org.jooq.impl.DSL.name("sequence_no"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>core.upgrade_statements.script_name</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.String> SCRIPT_NAME = createField(org.jooq.impl.DSL.name("script_name"), org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>core.upgrade_statements.statement_type</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.String> STATEMENT_TYPE = createField(org.jooq.impl.DSL.name("statement_type"), org.jooq.impl.SQLDataType.VARCHAR(10).nullable(false), this, "");

    /**
     * The column <code>core.upgrade_statements.statement_data_source</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.String> STATEMENT_DATA_SOURCE = createField(org.jooq.impl.DSL.name("statement_data_source"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.upgrade_statements.statement_body</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.String> STATEMENT_BODY = createField(org.jooq.impl.DSL.name("statement_body"), org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>core.upgrade_statements.run_status</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.String> RUN_STATUS = createField(org.jooq.impl.DSL.name("run_status"), org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>core.upgrade_statements.run_timestamp</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, org.joda.time.LocalDateTime> RUN_TIMESTAMP = createField(org.jooq.impl.DSL.name("run_timestamp"), org.jooq.impl.SQLDataType.LOCALDATETIME(6), this, "", new com.sonicle.jooq.jsr310.LocalDateTimeJodaConverter());

    /**
     * The column <code>core.upgrade_statements.run_message</code>.
     */
    public final org.jooq.TableField<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord, java.lang.String> RUN_MESSAGE = createField(org.jooq.impl.DSL.name("run_message"), org.jooq.impl.SQLDataType.CLOB, this, "");

    private UpgradeStatements(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UpgradeStatements(org.jooq.Name alias, org.jooq.Table<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord> aliased, org.jooq.Field<?>[] parameters) {
        super(alias, null, aliased, parameters, org.jooq.impl.DSL.comment(""), org.jooq.TableOptions.table());
    }

    /**
     * Create an aliased <code>core.upgrade_statements</code> table reference
     */
    public UpgradeStatements(java.lang.String alias) {
        this(org.jooq.impl.DSL.name(alias), UPGRADE_STATEMENTS);
    }

    /**
     * Create an aliased <code>core.upgrade_statements</code> table reference
     */
    public UpgradeStatements(org.jooq.Name alias) {
        this(alias, UPGRADE_STATEMENTS);
    }

    /**
     * Create a <code>core.upgrade_statements</code> table reference
     */
    public UpgradeStatements() {
        this(org.jooq.impl.DSL.name("upgrade_statements"), null);
    }

    public <O extends org.jooq.Record> UpgradeStatements(org.jooq.Table<O> child, org.jooq.ForeignKey<O, com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord> key) {
        super(child, key, UPGRADE_STATEMENTS);
    }

    @java.lang.Override
    public org.jooq.Schema getSchema() {
        return com.sonicle.webtop.drm.jooq.Core.CORE;
    }

    @java.lang.Override
    public java.util.List<org.jooq.Index> getIndexes() {
        return java.util.Arrays.<org.jooq.Index>asList(com.sonicle.webtop.drm.jooq.Indexes.UPGRADE_STATEMENTS_AK1, com.sonicle.webtop.drm.jooq.Indexes.UPGRADE_STATEMENTS_AK2);
    }

    @java.lang.Override
    public org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord> getPrimaryKey() {
        return com.sonicle.webtop.drm.jooq.Keys.UPGRADE_STATEMENTS_PKEY;
    }

    @java.lang.Override
    public java.util.List<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord>> getKeys() {
        return java.util.Arrays.<org.jooq.UniqueKey<com.sonicle.webtop.drm.jooq.tables.records.UpgradeStatementsRecord>>asList(com.sonicle.webtop.drm.jooq.Keys.UPGRADE_STATEMENTS_PKEY);
    }

    @java.lang.Override
    public UpgradeStatements as(java.lang.String alias) {
        return new UpgradeStatements(org.jooq.impl.DSL.name(alias), this);
    }

    @java.lang.Override
    public UpgradeStatements as(org.jooq.Name alias) {
        return new UpgradeStatements(alias, this);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public UpgradeStatements rename(java.lang.String name) {
        return new UpgradeStatements(org.jooq.impl.DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @java.lang.Override
    public UpgradeStatements rename(org.jooq.Name name) {
        return new UpgradeStatements(name, null);
    }

    // -------------------------------------------------------------------------
    // Row11 type methods
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row11<java.lang.Integer, java.lang.String, java.lang.String, java.lang.Short, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.joda.time.LocalDateTime, java.lang.String> fieldsRow() {
        return (org.jooq.Row11) super.fieldsRow();
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables.pojos;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TimetableStamp implements java.io.Serializable {

    private static final long serialVersionUID = 1L;

    private java.lang.Integer           id;
    private java.lang.String            domainId;
    private java.lang.String            userId;
    private java.lang.String            type;
    private org.joda.time.LocalDateTime entrance;
    private org.joda.time.LocalDateTime exit;
    private java.lang.String            location;

    public TimetableStamp() {}

    public TimetableStamp(TimetableStamp value) {
        this.id = value.id;
        this.domainId = value.domainId;
        this.userId = value.userId;
        this.type = value.type;
        this.entrance = value.entrance;
        this.exit = value.exit;
        this.location = value.location;
    }

    public TimetableStamp(
        java.lang.Integer           id,
        java.lang.String            domainId,
        java.lang.String            userId,
        java.lang.String            type,
        org.joda.time.LocalDateTime entrance,
        org.joda.time.LocalDateTime exit,
        java.lang.String            location
    ) {
        this.id = id;
        this.domainId = domainId;
        this.userId = userId;
        this.type = type;
        this.entrance = entrance;
        this.exit = exit;
        this.location = location;
    }

    /**
     * Getter for <code>drm.timetable_stamp.id</code>.
     */
    public java.lang.Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>drm.timetable_stamp.id</code>.
     */
    public void setId(java.lang.Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>drm.timetable_stamp.domain_id</code>.
     */
    public java.lang.String getDomainId() {
        return this.domainId;
    }

    /**
     * Setter for <code>drm.timetable_stamp.domain_id</code>.
     */
    public void setDomainId(java.lang.String domainId) {
        this.domainId = domainId;
    }

    /**
     * Getter for <code>drm.timetable_stamp.user_id</code>.
     */
    public java.lang.String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>drm.timetable_stamp.user_id</code>.
     */
    public void setUserId(java.lang.String userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>drm.timetable_stamp.type</code>.
     */
    public java.lang.String getType() {
        return this.type;
    }

    /**
     * Setter for <code>drm.timetable_stamp.type</code>.
     */
    public void setType(java.lang.String type) {
        this.type = type;
    }

    /**
     * Getter for <code>drm.timetable_stamp.entrance</code>.
     */
    public org.joda.time.LocalDateTime getEntrance() {
        return this.entrance;
    }

    /**
     * Setter for <code>drm.timetable_stamp.entrance</code>.
     */
    public void setEntrance(org.joda.time.LocalDateTime entrance) {
        this.entrance = entrance;
    }

    /**
     * Getter for <code>drm.timetable_stamp.exit</code>.
     */
    public org.joda.time.LocalDateTime getExit() {
        return this.exit;
    }

    /**
     * Setter for <code>drm.timetable_stamp.exit</code>.
     */
    public void setExit(org.joda.time.LocalDateTime exit) {
        this.exit = exit;
    }

    /**
     * Getter for <code>drm.timetable_stamp.location</code>.
     */
    public java.lang.String getLocation() {
        return this.location;
    }

    /**
     * Setter for <code>drm.timetable_stamp.location</code>.
     */
    public void setLocation(java.lang.String location) {
        this.location = location;
    }

    @Override
    public String toString() {
        java.lang.StringBuilder sb = new java.lang.StringBuilder("TimetableStamp (");

        sb.append(id);
        sb.append(", ").append(domainId);
        sb.append(", ").append(userId);
        sb.append(", ").append(type);
        sb.append(", ").append(entrance);
        sb.append(", ").append(exit);
        sb.append(", ").append(location);

        sb.append(")");
        return sb.toString();
    }
}

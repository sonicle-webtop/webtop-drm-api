/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables.records;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ActivitiesRecord extends org.jooq.impl.UpdatableRecordImpl<ActivitiesRecord> implements org.jooq.Record7<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>core.activities.activity_id</code>.
     */
    public void setActivityId(java.lang.Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>core.activities.activity_id</code>.
     */
    public java.lang.Integer getActivityId() {
        return (java.lang.Integer) get(0);
    }

    /**
     * Setter for <code>core.activities.domain_id</code>.
     */
    public void setDomainId(java.lang.String value) {
        set(1, value);
    }

    /**
     * Getter for <code>core.activities.domain_id</code>.
     */
    public java.lang.String getDomainId() {
        return (java.lang.String) get(1);
    }

    /**
     * Setter for <code>core.activities.user_id</code>.
     */
    public void setUserId(java.lang.String value) {
        set(2, value);
    }

    /**
     * Getter for <code>core.activities.user_id</code>.
     */
    public java.lang.String getUserId() {
        return (java.lang.String) get(2);
    }

    /**
     * Setter for <code>core.activities.revision_status</code>.
     */
    public void setRevisionStatus(java.lang.String value) {
        set(3, value);
    }

    /**
     * Getter for <code>core.activities.revision_status</code>.
     */
    public java.lang.String getRevisionStatus() {
        return (java.lang.String) get(3);
    }

    /**
     * Setter for <code>core.activities.description</code>.
     */
    public void setDescription(java.lang.String value) {
        set(4, value);
    }

    /**
     * Getter for <code>core.activities.description</code>.
     */
    public java.lang.String getDescription() {
        return (java.lang.String) get(4);
    }

    /**
     * Setter for <code>core.activities.read_only</code>.
     */
    public void setReadOnly(java.lang.Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>core.activities.read_only</code>.
     */
    public java.lang.Boolean getReadOnly() {
        return (java.lang.Boolean) get(5);
    }

    /**
     * Setter for <code>core.activities.external_id</code>.
     */
    public void setExternalId(java.lang.String value) {
        set(6, value);
    }

    /**
     * Getter for <code>core.activities.external_id</code>.
     */
    public java.lang.String getExternalId() {
        return (java.lang.String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Record1<java.lang.Integer> key() {
        return (org.jooq.Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row7<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String> fieldsRow() {
        return (org.jooq.Row7) super.fieldsRow();
    }

    @java.lang.Override
    public org.jooq.Row7<java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Boolean, java.lang.String> valuesRow() {
        return (org.jooq.Row7) super.valuesRow();
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Integer> field1() {
        return com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES.ACTIVITY_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field2() {
        return com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES.DOMAIN_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field3() {
        return com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES.USER_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field4() {
        return com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES.REVISION_STATUS;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field5() {
        return com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES.DESCRIPTION;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Boolean> field6() {
        return com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES.READ_ONLY;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field7() {
        return com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES.EXTERNAL_ID;
    }

    @java.lang.Override
    public java.lang.Integer component1() {
        return getActivityId();
    }

    @java.lang.Override
    public java.lang.String component2() {
        return getDomainId();
    }

    @java.lang.Override
    public java.lang.String component3() {
        return getUserId();
    }

    @java.lang.Override
    public java.lang.String component4() {
        return getRevisionStatus();
    }

    @java.lang.Override
    public java.lang.String component5() {
        return getDescription();
    }

    @java.lang.Override
    public java.lang.Boolean component6() {
        return getReadOnly();
    }

    @java.lang.Override
    public java.lang.String component7() {
        return getExternalId();
    }

    @java.lang.Override
    public java.lang.Integer value1() {
        return getActivityId();
    }

    @java.lang.Override
    public java.lang.String value2() {
        return getDomainId();
    }

    @java.lang.Override
    public java.lang.String value3() {
        return getUserId();
    }

    @java.lang.Override
    public java.lang.String value4() {
        return getRevisionStatus();
    }

    @java.lang.Override
    public java.lang.String value5() {
        return getDescription();
    }

    @java.lang.Override
    public java.lang.Boolean value6() {
        return getReadOnly();
    }

    @java.lang.Override
    public java.lang.String value7() {
        return getExternalId();
    }

    @java.lang.Override
    public ActivitiesRecord value1(java.lang.Integer value) {
        setActivityId(value);
        return this;
    }

    @java.lang.Override
    public ActivitiesRecord value2(java.lang.String value) {
        setDomainId(value);
        return this;
    }

    @java.lang.Override
    public ActivitiesRecord value3(java.lang.String value) {
        setUserId(value);
        return this;
    }

    @java.lang.Override
    public ActivitiesRecord value4(java.lang.String value) {
        setRevisionStatus(value);
        return this;
    }

    @java.lang.Override
    public ActivitiesRecord value5(java.lang.String value) {
        setDescription(value);
        return this;
    }

    @java.lang.Override
    public ActivitiesRecord value6(java.lang.Boolean value) {
        setReadOnly(value);
        return this;
    }

    @java.lang.Override
    public ActivitiesRecord value7(java.lang.String value) {
        setExternalId(value);
        return this;
    }

    @java.lang.Override
    public ActivitiesRecord values(java.lang.Integer value1, java.lang.String value2, java.lang.String value3, java.lang.String value4, java.lang.String value5, java.lang.Boolean value6, java.lang.String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ActivitiesRecord
     */
    public ActivitiesRecord() {
        super(com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES);
    }

    /**
     * Create a detached, initialised ActivitiesRecord
     */
    public ActivitiesRecord(java.lang.Integer activityId, java.lang.String domainId, java.lang.String userId, java.lang.String revisionStatus, java.lang.String description, java.lang.Boolean readOnly, java.lang.String externalId) {
        super(com.sonicle.webtop.drm.jooq.tables.Activities.ACTIVITIES);

        setActivityId(activityId);
        setDomainId(domainId);
        setUserId(userId);
        setRevisionStatus(revisionStatus);
        setDescription(description);
        setReadOnly(readOnly);
        setExternalId(externalId);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables.records;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataSourcesRecord extends org.jooq.impl.UpdatableRecordImpl<DataSourcesRecord> implements org.jooq.Record13<java.lang.String, java.lang.String, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>core.data_sources.data_source_id</code>.
     */
    public void setDataSourceId(java.lang.String value) {
        set(0, value);
    }

    /**
     * Getter for <code>core.data_sources.data_source_id</code>.
     */
    public java.lang.String getDataSourceId() {
        return (java.lang.String) get(0);
    }

    /**
     * Setter for <code>core.data_sources.domain_id</code>.
     */
    public void setDomainId(java.lang.String value) {
        set(1, value);
    }

    /**
     * Getter for <code>core.data_sources.domain_id</code>.
     */
    public java.lang.String getDomainId() {
        return (java.lang.String) get(1);
    }

    /**
     * Setter for <code>core.data_sources.revision_timestamp</code>.
     */
    public void setRevisionTimestamp(org.joda.time.DateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>core.data_sources.revision_timestamp</code>.
     */
    public org.joda.time.DateTime getRevisionTimestamp() {
        return (org.joda.time.DateTime) get(2);
    }

    /**
     * Setter for <code>core.data_sources.name</code>.
     */
    public void setName(java.lang.String value) {
        set(3, value);
    }

    /**
     * Getter for <code>core.data_sources.name</code>.
     */
    public java.lang.String getName() {
        return (java.lang.String) get(3);
    }

    /**
     * Setter for <code>core.data_sources.description</code>.
     */
    public void setDescription(java.lang.String value) {
        set(4, value);
    }

    /**
     * Getter for <code>core.data_sources.description</code>.
     */
    public java.lang.String getDescription() {
        return (java.lang.String) get(4);
    }

    /**
     * Setter for <code>core.data_sources.type</code>.
     */
    public void setType(java.lang.String value) {
        set(5, value);
    }

    /**
     * Getter for <code>core.data_sources.type</code>.
     */
    public java.lang.String getType() {
        return (java.lang.String) get(5);
    }

    /**
     * Setter for <code>core.data_sources.server_name</code>.
     */
    public void setServerName(java.lang.String value) {
        set(6, value);
    }

    /**
     * Getter for <code>core.data_sources.server_name</code>.
     */
    public java.lang.String getServerName() {
        return (java.lang.String) get(6);
    }

    /**
     * Setter for <code>core.data_sources.server_port</code>.
     */
    public void setServerPort(java.lang.Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>core.data_sources.server_port</code>.
     */
    public java.lang.Integer getServerPort() {
        return (java.lang.Integer) get(7);
    }

    /**
     * Setter for <code>core.data_sources.database_name</code>.
     */
    public void setDatabaseName(java.lang.String value) {
        set(8, value);
    }

    /**
     * Getter for <code>core.data_sources.database_name</code>.
     */
    public java.lang.String getDatabaseName() {
        return (java.lang.String) get(8);
    }

    /**
     * Setter for <code>core.data_sources.username</code>.
     */
    public void setUsername(java.lang.String value) {
        set(9, value);
    }

    /**
     * Getter for <code>core.data_sources.username</code>.
     */
    public java.lang.String getUsername() {
        return (java.lang.String) get(9);
    }

    /**
     * Setter for <code>core.data_sources.password</code>.
     */
    public void setPassword(java.lang.String value) {
        set(10, value);
    }

    /**
     * Getter for <code>core.data_sources.password</code>.
     */
    public java.lang.String getPassword() {
        return (java.lang.String) get(10);
    }

    /**
     * Setter for <code>core.data_sources.driver_raw_props</code>.
     */
    public void setDriverRawProps(java.lang.String value) {
        set(11, value);
    }

    /**
     * Getter for <code>core.data_sources.driver_raw_props</code>.
     */
    public java.lang.String getDriverRawProps() {
        return (java.lang.String) get(11);
    }

    /**
     * Setter for <code>core.data_sources.pool_raw_props</code>.
     */
    public void setPoolRawProps(java.lang.String value) {
        set(12, value);
    }

    /**
     * Getter for <code>core.data_sources.pool_raw_props</code>.
     */
    public java.lang.String getPoolRawProps() {
        return (java.lang.String) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Record1<java.lang.String> key() {
        return (org.jooq.Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row13<java.lang.String, java.lang.String, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row13) super.fieldsRow();
    }

    @java.lang.Override
    public org.jooq.Row13<java.lang.String, java.lang.String, org.joda.time.DateTime, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String> valuesRow() {
        return (org.jooq.Row13) super.valuesRow();
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field1() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.DATA_SOURCE_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field2() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.DOMAIN_ID;
    }

    @java.lang.Override
    public org.jooq.Field<org.joda.time.DateTime> field3() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.REVISION_TIMESTAMP;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field4() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.NAME;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field5() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.DESCRIPTION;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field6() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.TYPE;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field7() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.SERVER_NAME;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.Integer> field8() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.SERVER_PORT;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field9() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.DATABASE_NAME;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field10() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.USERNAME;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field11() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.PASSWORD;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field12() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.DRIVER_RAW_PROPS;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field13() {
        return com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES.POOL_RAW_PROPS;
    }

    @java.lang.Override
    public java.lang.String component1() {
        return getDataSourceId();
    }

    @java.lang.Override
    public java.lang.String component2() {
        return getDomainId();
    }

    @java.lang.Override
    public org.joda.time.DateTime component3() {
        return getRevisionTimestamp();
    }

    @java.lang.Override
    public java.lang.String component4() {
        return getName();
    }

    @java.lang.Override
    public java.lang.String component5() {
        return getDescription();
    }

    @java.lang.Override
    public java.lang.String component6() {
        return getType();
    }

    @java.lang.Override
    public java.lang.String component7() {
        return getServerName();
    }

    @java.lang.Override
    public java.lang.Integer component8() {
        return getServerPort();
    }

    @java.lang.Override
    public java.lang.String component9() {
        return getDatabaseName();
    }

    @java.lang.Override
    public java.lang.String component10() {
        return getUsername();
    }

    @java.lang.Override
    public java.lang.String component11() {
        return getPassword();
    }

    @java.lang.Override
    public java.lang.String component12() {
        return getDriverRawProps();
    }

    @java.lang.Override
    public java.lang.String component13() {
        return getPoolRawProps();
    }

    @java.lang.Override
    public java.lang.String value1() {
        return getDataSourceId();
    }

    @java.lang.Override
    public java.lang.String value2() {
        return getDomainId();
    }

    @java.lang.Override
    public org.joda.time.DateTime value3() {
        return getRevisionTimestamp();
    }

    @java.lang.Override
    public java.lang.String value4() {
        return getName();
    }

    @java.lang.Override
    public java.lang.String value5() {
        return getDescription();
    }

    @java.lang.Override
    public java.lang.String value6() {
        return getType();
    }

    @java.lang.Override
    public java.lang.String value7() {
        return getServerName();
    }

    @java.lang.Override
    public java.lang.Integer value8() {
        return getServerPort();
    }

    @java.lang.Override
    public java.lang.String value9() {
        return getDatabaseName();
    }

    @java.lang.Override
    public java.lang.String value10() {
        return getUsername();
    }

    @java.lang.Override
    public java.lang.String value11() {
        return getPassword();
    }

    @java.lang.Override
    public java.lang.String value12() {
        return getDriverRawProps();
    }

    @java.lang.Override
    public java.lang.String value13() {
        return getPoolRawProps();
    }

    @java.lang.Override
    public DataSourcesRecord value1(java.lang.String value) {
        setDataSourceId(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value2(java.lang.String value) {
        setDomainId(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value3(org.joda.time.DateTime value) {
        setRevisionTimestamp(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value4(java.lang.String value) {
        setName(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value5(java.lang.String value) {
        setDescription(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value6(java.lang.String value) {
        setType(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value7(java.lang.String value) {
        setServerName(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value8(java.lang.Integer value) {
        setServerPort(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value9(java.lang.String value) {
        setDatabaseName(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value10(java.lang.String value) {
        setUsername(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value11(java.lang.String value) {
        setPassword(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value12(java.lang.String value) {
        setDriverRawProps(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord value13(java.lang.String value) {
        setPoolRawProps(value);
        return this;
    }

    @java.lang.Override
    public DataSourcesRecord values(java.lang.String value1, java.lang.String value2, org.joda.time.DateTime value3, java.lang.String value4, java.lang.String value5, java.lang.String value6, java.lang.String value7, java.lang.Integer value8, java.lang.String value9, java.lang.String value10, java.lang.String value11, java.lang.String value12, java.lang.String value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DataSourcesRecord
     */
    public DataSourcesRecord() {
        super(com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES);
    }

    /**
     * Create a detached, initialised DataSourcesRecord
     */
    public DataSourcesRecord(java.lang.String dataSourceId, java.lang.String domainId, org.joda.time.DateTime revisionTimestamp, java.lang.String name, java.lang.String description, java.lang.String type, java.lang.String serverName, java.lang.Integer serverPort, java.lang.String databaseName, java.lang.String username, java.lang.String password, java.lang.String driverRawProps, java.lang.String poolRawProps) {
        super(com.sonicle.webtop.drm.jooq.tables.DataSources.DATA_SOURCES);

        setDataSourceId(dataSourceId);
        setDomainId(domainId);
        setRevisionTimestamp(revisionTimestamp);
        setName(name);
        setDescription(description);
        setType(type);
        setServerName(serverName);
        setServerPort(serverPort);
        setDatabaseName(databaseName);
        setUsername(username);
        setPassword(password);
        setDriverRawProps(driverRawProps);
        setPoolRawProps(poolRawProps);
    }
}

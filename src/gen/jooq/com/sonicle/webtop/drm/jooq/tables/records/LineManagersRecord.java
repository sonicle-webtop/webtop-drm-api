/*
 * This file is generated by jOOQ.
 */
package com.sonicle.webtop.drm.jooq.tables.records;



/**
 * This class is generated by jOOQ.
 */
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LineManagersRecord extends org.jooq.impl.UpdatableRecordImpl<LineManagersRecord> implements org.jooq.Record2<java.lang.String, java.lang.String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>drm.line_managers.domain_id</code>.
     */
    public void setDomainId(java.lang.String value) {
        set(0, value);
    }

    /**
     * Getter for <code>drm.line_managers.domain_id</code>.
     */
    public java.lang.String getDomainId() {
        return (java.lang.String) get(0);
    }

    /**
     * Setter for <code>drm.line_managers.user_id</code>.
     */
    public void setUserId(java.lang.String value) {
        set(1, value);
    }

    /**
     * Getter for <code>drm.line_managers.user_id</code>.
     */
    public java.lang.String getUserId() {
        return (java.lang.String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Record2<java.lang.String, java.lang.String> key() {
        return (org.jooq.Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @java.lang.Override
    public org.jooq.Row2<java.lang.String, java.lang.String> fieldsRow() {
        return (org.jooq.Row2) super.fieldsRow();
    }

    @java.lang.Override
    public org.jooq.Row2<java.lang.String, java.lang.String> valuesRow() {
        return (org.jooq.Row2) super.valuesRow();
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field1() {
        return com.sonicle.webtop.drm.jooq.tables.LineManagers.LINE_MANAGERS.DOMAIN_ID;
    }

    @java.lang.Override
    public org.jooq.Field<java.lang.String> field2() {
        return com.sonicle.webtop.drm.jooq.tables.LineManagers.LINE_MANAGERS.USER_ID;
    }

    @java.lang.Override
    public java.lang.String component1() {
        return getDomainId();
    }

    @java.lang.Override
    public java.lang.String component2() {
        return getUserId();
    }

    @java.lang.Override
    public java.lang.String value1() {
        return getDomainId();
    }

    @java.lang.Override
    public java.lang.String value2() {
        return getUserId();
    }

    @java.lang.Override
    public LineManagersRecord value1(java.lang.String value) {
        setDomainId(value);
        return this;
    }

    @java.lang.Override
    public LineManagersRecord value2(java.lang.String value) {
        setUserId(value);
        return this;
    }

    @java.lang.Override
    public LineManagersRecord values(java.lang.String value1, java.lang.String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LineManagersRecord
     */
    public LineManagersRecord() {
        super(com.sonicle.webtop.drm.jooq.tables.LineManagers.LINE_MANAGERS);
    }

    /**
     * Create a detached, initialised LineManagersRecord
     */
    public LineManagersRecord(java.lang.String domainId, java.lang.String userId) {
        super(com.sonicle.webtop.drm.jooq.tables.LineManagers.LINE_MANAGERS);

        setDomainId(domainId);
        setUserId(userId);
    }
}
